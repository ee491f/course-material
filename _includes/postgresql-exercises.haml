%section#postgresql-exercises{data: {magellan: {target: 'postgresql-exercises'}}}
  %h2 PostgreSQL Exercises
  %p
    For these exercises, we will play around with PostgreSQL using SQL and Python. People who work primarily with databases (aka database administrators) will normally use SQL, but (web) application developers will normally use an&nbsp;
    %a{href: 'https://en.wikipedia.org/wiki/Object-relational_mapping'} object relational mapping
    &nbsp;library to interact with the PostgreSQL database. ORMs allow developers to work with a database using the application's programming language (e.g. Python in our case).
  %p
    Django's ORM library is the engine/library that allows you and your application to interact with the database thru Django's&nbsp;
    %a{href: 'https://docs.djangoproject.com/en/2.0/topics/db/'} models
    &nbsp;and&nbsp;
    = succeed '. ' do
      %a{href: 'https://tutorial.djangogirls.org/en/django_orm/'} QuerySets
    Django's ORM will translate your application Python code into SQL commands that PostgreSQL will understand.

  %p
    Go through the&nbsp;
    %a{href: 'https://www.postgresql.org/docs/devel/static/tutorial-sql.html'} PostgreSQL tutorials
    &nbsp;using the&nbsp;
    %a{href: 'https://medium.com/analytics-vidhya/getting-started-with-postgresql-using-docker-compose-34d6b808c47c?sk=493359a3d372f1788733a9b0374d779d'} "Getting Started with PostgreSQL using Docker-Compose" tutorial
    's PostgreSQL database container
    &nbsp;to learn how to:
  %ul
    %li
      %a{href: 'https://www.postgresql.org/docs/devel/static/tutorial-table.html'} create a table
    %li
      %a{href: 'https://www.postgresql.org/docs/devel/static/tutorial-populate.html'} add data to a table
      &nbsp;(aka insert)
    %li
      %a{href: 'https://www.postgresql.org/docs/devel/static/tutorial-select.html'} search a table for data
      &nbsp;(aka query, select)
    %li
      %a{href: 'https://www.postgresql.org/docs/devel/static/tutorial-update.html'} update data in a table
    %li
      %a{href: 'https://www.postgresql.org/docs/devel/static/tutorial-delete.html'} delete data in a table
    %li
      %a{href: 'https://www.postgresql.org/docs/devel/static/tutorial-join.html'} join data across tables

  %p
    Our end-goal is to create a Django application so it is best to know how to use a database by leveraging the Django framework.&nbsp;
    Reference the&nbsp;
    %a{href: 'https://tutorial.djangogirls.org/en/django_models/'} Django Girls tutorials
    &nbsp;to add their Blog's&nbsp;
    %code Post
    &nbsp;model to a Django applicaion.&nbsp;
    You can modify any of the previous Django applications you have built or modified to accomplish this.
  %p
    For example you can use any of the following Django applications as the starting point for this exercise:
  %ul
    %li
      The Django application from the&nbsp;
      %a{href: 'https://medium.com/analytics-vidhya/an-example-django-project-in-containers-cc29121df310?sk=64d84594e93870c766548f79791db8bf'} "An Example Django Project in Containers"
      &nbsp;tutorial
    %li
      The modified Django application from the&nbsp;
      %a{href: '#django-exercises'} Django Exercises
    %li
      The new Django application from the&nbsp;
      %a{href: '#django-exercises'} Django Exercises

  %p
    Make the following modifications to your Django application:
  %ul
    %li
      Update the Django application to have a Blog app with a&nbsp;
      %a{href: 'https://tutorial.djangogirls.org/en/django_models/#creating-a-blog-post-model'} Post model
      &nbsp;(Section "Creating a blog post model")
    %li
      %a{href: 'https://tutorial.djangogirls.org/en/django_models/#create-tables-for-models-in-your-database'} Create and run migrations
      &nbsp;(Section "Create tables for models in your database")
      &nbsp;to support the new&nbsp;
      %code Post
      &nbsp;model
    %li
      Add the pages to allow all of the CRUD operations for the Post model (e.g.&nbsp;
      %a{href: 'https://tutorial.djangogirls.org/en/django_orm/#create-object'} creating a post
      &nbsp;[Section "Create object"],
      &nbsp;
      %a{href: 'https://tutorial.djangogirls.org/en/django_orm/#all-objects'} reading posts
      &nbsp;[Section "All objects"], etc.)
    %li
      Add a page that displays a&nbsp;
      %a{href: 'https://tutorial.djangogirls.org/en/django_orm/#filter-objects'} filtered list of posts
      &nbsp;(Section "Filter objects"),&nbsp;
      e.g. all posts by a specific author, all posts with a keyword in its title, all published posts, all posts published within some timeframe, etc.
    %li
      Add a page that displays an&nbsp;
      %a{href: 'https://tutorial.djangogirls.org/en/django_orm/#ordering-objects'} ordered list of posts
      &nbsp;(Section "Ordering objects"),&nbsp;
      e.g. posts listed in ascending or descending order based on its title, author, published date, or some other attribute
    %li
      Add a page that displays a&nbsp;
      %a{href: 'https://tutorial.djangogirls.org/en/django_orm/#complex-queries-through-method-chaining'} filtered and ordered list of posts
      &nbsp;(Section "Complex queries through method-chaining"),&nbsp;
      e.g. posts filtered by title and ordered by author, filtered by author and ordered by published date, etc.
  %p
    If you are stuck, you can reference this example application that is one possible solution to our exercise (submitted by a previous student):&nbsp;
    %a{href: 'https://github.com/ee491f/abc8-PostgreSQL_Exercise-2021'} an example solution

  %p
    Note: Django defaults to using the SQLite3 database if it is not configured to use any particular database, like PostgreSQL.&nbsp;
    But the ORM handles all of that transparently to the developer, so it doesn't really matter which database we're using for this particular exercise as long as we are using the ORM to interact with it.

  %p
    If you want to learn more about PostgreSQL, take a look at these resources:
    %ul
      %li
        %a{href: 'https://cs50.harvard.edu/web/#sql'} CS50's Web Follow On

  %p
    If you still have more time to spare and would like to go beyond the scope of this course, check out this site for more practice:
  %ul
    %li
      %a{href: 'https://pgexercises.com/questions/basic/'} SQL Practice Exercises

